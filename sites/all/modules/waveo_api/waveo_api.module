<?php 

/**
 * Implements hook_menu()
 */
function waveo_api_menu() {
  $items = array();
  $items['issueCard/submit'] = array(
      'title' => t('Issue Card From Submit'),
      'page callback' => 'waveo_api_issue_card_submit',
      'page arguments' => array(),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  $items['issueOffer/submit'] = array(
      'title' => t('Issue Offer From Submit'),
      'page callback' => 'waveo_api_issue_offer_submit',
      'page arguments' => array(),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  $items['userAction/submit'] = array(
      'title' => t('Track User Action From Submit'),
      'page callback' => 'waveo_api_track_user_action_submit',
      'page arguments' => array(),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  $items['clearData/submit'] = array(
      'title' => t('Clear Testing Data From Submit'),
      'page callback' => 'waveo_api_clear_data_submit',
      'page arguments' => array(),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
  );
  return $items;
}

function waveo_api_issue_card_submit() {
  
  $parameter   = array();
  $parameter['cardMasterId'] = $_POST['card_master_id'];
  $parameter['countryCode']  = $_POST['country_code'];
  $parameter['mobileNumber'] = $_POST['mobile_number'];
  $parameter['nric']         = $_POST['nric'];
  $parameter['familyName']   = $_POST['family_name'];
  $parameter['givenName']    = $_POST['given_name'];
  $options  = array(
      'method'  => 'POST',
      'headers' => array(
          'Content-Type' => 'application/json;charset=utf-8',
      ),
      'data' => json_encode($parameter),
  );
  $request_url = 'https://api.waveo.com/test/v1/card_1/issue?oauth_consumer_key=zwXgebFqNLtamLMeT6zopNrhZYkPsqys';
  $response    = drupal_http_request($request_url, $options);
  if ('4FF26D7C' == $_POST['card_master_id']) {
    $card_name = 'Library Card (For Foreigners)';
  } elseif ('DK3MA8HJ' == $_POST['card_master_id']) {
    $card_name = 'Library@Orchard Card';
  }
  if ('200' == $response->code) {
    drupal_set_message("{$card_name} has been issued to mobile {$parameter['countryCode']} {$parameter['mobileNumber']}");
  } else {
    drupal_set_message("$card_name issue unsuccessful", 'error');
  }
  drupal_goto("issueCard");
}


function waveo_api_issue_offer_submit() {
  
  $parameter = array();
  $parameter['offerMasterId'] = $_POST['offer_master_id'];
  $parameter['countryCode']   = $_POST['country_code'];
  $parameter['mobileNumber']  = $_POST['mobile_number'];
  $options  = array(
      'method'  => 'POST',
      'headers' => array(
          'Content-Type' => 'application/json;charset=utf-8',
      ),
      'data' => json_encode($parameter),
  );
  $request_url = 'https://api.waveo.com/test/v1/offer_1/issue?oauth_consumer_key=zwXgebFqNLtamLMeT6zopNrhZYkPsqys';
  $response    = drupal_http_request($request_url, $options);
  if ('D0D53249' == $_POST['offer_master_id']) {
    $offer_name = 'rainforest moisture shampoo';
  }
  if ('200' == $response->code) {
    drupal_set_message("Free {$offer_name} offer has been issued to mobile {$parameter['countryCode']} {$parameter['mobileNumber']}");
  } else {
    drupal_set_message("Free {$offer_name} offer issue unsuccessful", 'error');
  }
  drupal_goto("issueOffer");
}



function waveo_api_track_user_action_submit() {
  $parameter = array();
  $parameter['countryCode']  = $_POST['country_code'];
  $parameter['mobileNumber'] = $_POST['mobile_number'];
  $parameter['bookGenre']    = $_POST['book_genre'];
  $options  = array(
      'method'  => 'POST',
      'headers' => array(
          'Content-Type' => 'application/json;charset=utf-8',
      ),
      'data' => json_encode($parameter),
  );
  $request_url = 'https://api.waveo.com/test/v1/contact_1/action?oauth_consumer_key=zwXgebFqNLtamLMeT6zopNrhZYkPsqys';
  $response    = drupal_http_request($request_url, $options);
  switch ($_POST['book_genre']) {
    case 'scifi':
      $stamp_name = 'Sci-Fi';
      break;
    case 'romance':
      $stamp_name = 'Romance';
      break;
    case 'mystery':
      $stamp_name = 'Mystery, Thriller & Suspense';
      break;
    case 'action':
      $stamp_name = 'Action Adventure';
      break;
    case 'history':
      $stamp_name = 'History';
      break;
    case 'selfhelp':
      $stamp_name = 'Self-Help';
      break;
  }
  if ('200' == $response->code) {
    drupal_set_message("One {$stamp_name} book genre stamp has been issued to mobile {$parameter['countryCode']} {$parameter['mobileNumber']}");
  } else {
    drupal_set_message("$stamp_name book genre stamp issue unsuccessful", 'error');
  }
  drupal_goto("userAction");
}


function waveo_api_clear_data_submit() {
  $forceDelete  = $_POST['force_delete'];
  $request_url = "http://nlbdemo.perkd.me/ag?action=clear_accounts&forceDelete={$forceDelete}";
  watchdog('QQ - CLear Data Callback', $request_url);
  $response    = drupal_http_request($request_url);
  if('200' == $response->code) {
    watchdog('QQ - CLear Data Callback', print_r($response, true));
    $data = json_decode($response->data, true);
    watchdog('QQ - CLear Data Callback', print_r($data, true));
    if('N' === $data['flag']) {
      drupal_set_message("You have no permission to do this action", 'error');
    }else{
      //not logout mobiles
      $mobiles = $data['mobile'];
      if(empty($mobiles)) {
        drupal_set_message("All {$data['total']} accounts were cleared successfully");
      }else{
        $mobile_str = implode(',', $mobiles);
        $cleared    = $data['total'] - count($mobiles);
        drupal_set_message("$cleared accounts were cleared successfully, yet logout mobile: [{$mobile_str}]", 'error');
      }
    }
  }else{
    drupal_set_message("You have no permission to do this action", 'error');
  }
  drupal_goto("clearData");
}